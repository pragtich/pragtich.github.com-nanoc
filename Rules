#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

## Index images help to spice stuff up
# I want them to be 80 x 80 pixels in size
# They can be included by putting an indeximage: filename into the YAML (header) of the content

## Preprocessing.
# This should gather all articles for the index page and create it's item.
# I also want it to gather categories for the nav bar, eventually

preprocess do
  def create_index

	  articles_index = sorted_articles.slice(0..@config[:index_count]-1)

  # Create main index page

  	  @items << Nanoc3::Item.new(
                                 "<%= render 'index_page'%>",
                                 {:myarts => articles_index, :title => "Index of articles (1..#{@config[:index_count]})"},
                                 "/"
 	  )

  # Create index overflow
  	  @items << Nanoc3::Item.new(
        "<%= render 'index_page' %>",
    	{:myarts => sorted_articles, :title => "Complete index of all articles" },
    	"/all_articles/"
  	  )
  end

  def create_categories

    #articles_all = items.select { |i| i[:kind] == 'article'}
	sorted_articles.each do |article|
	  $cats[article[:category]] << article
	end

	$cats.each do |name, cat|
	      items << Nanoc3::Item.new(
                                "<%= render 'category_page', :my_category => \"#{name}\" %>",
                                { :title => "#{name}"},
                                "/all_#{name}/"
      )
    end
  end

  def cleanup_items
    # Prepares everything for the index page creation

    # Capitalize categories in order to get consistent results in the Index column
    sorted_articles.each do |art|
	  art[:category].capitalize!
	end
  end


  cleanup_items
  create_index
  create_categories
end


layout '/index_page/', :erb

layout '/category_page/', :erb

compile '/stylesheet/' do
  #nothing
end


compile '/all_*/' do 
		filter :erb
		layout 'default'
		filter :relativize_paths, :type => :html 
end


compile '/atom/' do
  filter :erb
end


compile '*' do
  if item.binary?
    # don’t filter binary items
  else 
    filter :erb
    case item[:extension]
       when 'md'
       	    filter :kramdown
    end
    layout 'default'
    filter :rubypants
	filter :relativize_paths, :type => :html 
    
  end
end


route '/atom/' do
  '/atom.xml'
end
route '/stylesheet/' do
  '/stylesheet.css'
end

route '/' do
  item.identifier + 'index.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    #item.identifier + 'index.html'
    
    #Write /foo/ to /foo.html
    item.identifier.chop + '.html'
  end
end



layout '*', :erb

